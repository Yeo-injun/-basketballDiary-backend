<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.threeNerds.basketballDiary.mvc.user.repository.UserRepository">

    <sql id="AllProperties" >
          USER_SEQ
        , USER_ID
        , NAME
        , PWD AS PASSWORD
        , BIRTH_YMD
        , EMAIL
        , USER_IMAGE_PATH
        , USER_REG_YN
        , GENDER
        , HEIGHT
        , WEIGHT
        , SIDO_CODE
        , SIGUNGU_CODE
        , POSITION_CODE
        , ROADADDRESS
    </sql>


    <select id="findUser" resultType="com.threeNerds.basketballDiary.mvc.user.domain.User">
        /* UserRepository.findUser */
        SELECT
        <include refid="AllProperties" />
          FROM USER
         WHERE 1=1
           AND USER_SEQ = #{userSeq}
    </select>

    <select id="findUserByUserId" resultType="com.threeNerds.basketballDiary.mvc.user.domain.User">
        /* UserRepository.findUserByUserId */
        SELECT
        <include refid="AllProperties" />
          FROM USER
         WHERE 1=1
           AND USER_ID = #{userId}
    </select>


    <select id="findAllUsersExcludingTeamMemberByUserNameOrEmail" resultType="com.threeNerds.basketballDiary.mvc.user.dto.UserDTO">
        /* UserRepository.findAllUsersExcludingTeamMemberByUserNameOrEmail */
        /* TODO 쿼리속성 변경 필요 */
        SELECT USER_SEQ
             , USER_ID
             , NAME AS USERNAME
             , EMAIL
             , USER_REG_YN
             , GENDER
             , HEIGHT
             , WEIGHT
             , SIDO_CODE
             , SIGUNGU_CODE
             , POSITION_CODE
          FROM USER
         WHERE 1=1
           AND USER_SEQ NOT IN (
                                SELECT USER_SEQ
                                  FROM TEAM_MEMBER
                                 WHERE 1=1
                                   AND TEAM_SEQ = #{teamSeq}
                               )
        <choose>
            <when test='userName != null and !"".equals( userName )'>
           AND NAME LIKE '%${userName}%'
            </when>
            <when test='email != null and !"".equals( email )'>
           AND EMAIL LIKE '%${email}%'
            </when>
        </choose>
    </select>


    <insert id="saveUser" parameterType="com.threeNerds.basketballDiary.mvc.user.domain.User" useGeneratedKeys="true" keyProperty="userId">
        /* UserRepository.saveUser */
        INSERT INTO
          USER (
               USER_ID
             , NAME
             , PWD
             , BIRTH_YMD
             , EMAIL
             , REG_DATE
             , UPDATE_DATE
             , USER_REG_YN
             , GENDER
             , HEIGHT
             , WEIGHT
             , SIDO_CODE
             , SIGUNGU_CODE
             , POSITION_CODE
             , ROADADDRESS
        )
        VALUES (
               #{userId}
             , #{name}
             , #{password}
             , #{birthYmd}
             , #{email}
             , #{regDate}
             , #{updateDate}
             , #{userRegYn}
             , #{gender}
             , #{height}
             , #{weight}
             , #{sidoCode}
             , #{sigunguCode}
             , #{positionCode}
             , #{roadAddress})
    </insert>


    <update id="updateProfile" parameterType="com.threeNerds.basketballDiary.mvc.user.domain.User">
        /* UserRepository.updateProfile */
        UPDATE USER
           SET NAME          = #{name}
             , BIRTH_YMD     = #{birthYmd}
             , GENDER        = #{gender}
             , EMAIL         = #{email}
             , HEIGHT        = #{height}
             , WEIGHT        = #{weight}
             , SIDO_CODE     = #{sidoCode}
             , SIGUNGU_CODE  = #{sigunguCode}
             , POSITION_CODE = #{positionCode}
             , ROADADDRESS   = #{roadAddress}
         WHERE 1=1
           AND USER_SEQ = #{userSeq}
    </update>

    <update id="updatePassword" parameterType="com.threeNerds.basketballDiary.mvc.user.domain.User">
        /* UserRepository.updatePassword */
        UPDATE USER
           SET PWD      = #{password}
         WHERE 1=1
           AND USER_SEQ = #{userSeq}
    </update>


    <delete id="deleteUser">
        /* UserRepository.deleteUser */
        DELETE FROM USER
         WHERE 1=1
           AND USER_SEQ = #{userSeq}
    </delete>


</mapper>