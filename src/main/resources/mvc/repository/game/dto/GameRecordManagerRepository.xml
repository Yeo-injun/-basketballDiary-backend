<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.threeNerds.basketballDiary.mvc.game.repository.dto.GameRecordManagerRepository">

    <select id="findGamesByTeamSeq" resultType="com.threeNerds.basketballDiary.mvc.myTeam.dto.GameRecordDTO">
        /* GameRecordManagerRepository.findGamesByTeamSeq */
        SELECT GAME_SEQ
             , GAME_RECORD_STATE_CODE
             , GAME_TYPE_CODE
             , GAME_YMD
             , GAME_START_TIME
             , GAME_END_TIME
             , GAME_PLACE_ADDRESS
             , GAME_PLACE_NAME
          FROM GAME
         WHERE 1=1
           AND GAME_SEQ IN ( SELECT GAME_SEQ
                               FROM GAME_JOIN_TEAM
                              WHERE TEAM_SEQ = #{teamSeq} )
    </select>

    <select id="findGameJoinTeamRecordsByGameSeq" resultType="com.threeNerds.basketballDiary.mvc.myTeam.dto.GameJoinTeamRecordDTO">
        /* GameRecordManagerRepository.findGameJoinTeamRecordsByGameSeq */
        SELECT gjt.GAME_JOIN_TEAM_SEQ
             , g.GAME_SEQ
             , gjt.TEAM_SEQ
             , gjt.TEAM_NAME
             , gjt.HOME_AWAY_CODE
          FROM GAME g
         INNER JOIN GAME_JOIN_TEAM gjt
            ON g.GAME_SEQ = gjt.GAME_SEQ
         WHERE 1=1
           AND g.GAME_SEQ = #{gameSeq}
    </select>

    <select id="findPlayerRecordsByQuarter" resultType="com.threeNerds.basketballDiary.mvc.game.dto.PlayerRecordDTO">
        /** GameRecordManagerRepository.findPlayerRecordsByQuarter */
       SELECT A.GAME_JOIN_TEAM_SEQ
            , A.HOME_AWAY_CODE
            , A.GAME_SEQ
            , A.TEAM_SEQ
            , B.USER_SEQ
            , B.NAME
            , B.BACK_NUMBER
            , B.POSITION_CODE
            , C.QUARTER_PLAYER_RECORDS_SEQ
            , C.QUARTER_CODE
            , C.FREE_THROW
            , C.TRY_FREE_THROW
            , C.TWO_POINT
            , C.TRY_TWO_POINT
            , C.THREE_POINT
            , C.TRY_THREE_POINT
            , C.FREE_THROW + 2 * C.TWO_POINT + 3 * C.TRY_FREE_THROW TOTAL_SCORE
            , C.ASSIST
            , C.REBOUND
            , C.STEAL
            , C.BLOCK
            , C.TURNOVER
            , C.FOUL
            , D.USER_IMAGE_PATH
         FROM GAME_JOIN_TEAM A
        INNER JOIN GAME_JOIN_PLAYER B
           ON A.GAME_JOIN_TEAM_SEQ = B.GAME_JOIN_TEAM_SEQ
        INNER JOIN QUARTER_PLAYER_RECORDS C
           ON B.GAME_JOIN_PLAYER_SEQ = C.GAME_JOIN_PLAYER_SEQ
         LEFT JOIN USER D
           ON B.USER_SEQ = D.USER_SEQ
        <where>
        <choose>
           <when test="quarterPlayerRecordsSeq != null and !''.equals(quarterPlayerRecordsSeq)">
              C.QUARTER_PLAYER_RECORDS_SEQ = #{quarterPlayerRecordsSeq}
           </when>
           <otherwise>
              C.GAME_SEQ = #{gameSeq}
          AND C.GAME_JOIN_PLAYER_SEQ = #{gameJoinPlayerSeq}
          AND C.GAME_JOIN_TEAM_SEQ = #{gameJoinTeamSeq}
          AND C.QUARTER_CODE = #{quarterCode}
            </otherwise>
        </choose>
        </where>
    </select>

    <select id="findAllPlayerRecordsByQuarter" resultType="com.threeNerds.basketballDiary.mvc.game.dto.PlayerRecordDTO">
        /** GameRecordManagerRepository.findAllPlayerRecordsByQuarter */
        SELECT A.GAME_JOIN_TEAM_SEQ
             , A.HOME_AWAY_CODE
             , A.GAME_SEQ
             , A.TEAM_SEQ
             , B.USER_SEQ
             , B.NAME
             , B.BACK_NUMBER
             , B.POSITION_CODE
             , C.QUARTER_PLAYER_RECORDS_SEQ
             , C.QUARTER_CODE
             , C.FREE_THROW
             , C.TRY_FREE_THROW
             , C.TWO_POINT
             , C.TRY_TWO_POINT
             , C.THREE_POINT
             , C.TRY_THREE_POINT
             , C.FREE_THROW + 2 * C.TWO_POINT + 3 * C.TRY_FREE_THROW TOTAL_SCORE
             , C.ASSIST
             , C.REBOUND
             , C.STEAL
             , C.BLOCK
             , C.TURNOVER
             , C.FOUL
             , D.USER_IMAGE_PATH
        FROM GAME_JOIN_TEAM A
       INNER JOIN GAME_JOIN_PLAYER B
          ON A.GAME_JOIN_TEAM_SEQ = B.GAME_JOIN_TEAM_SEQ
       INNER JOIN QUARTER_PLAYER_RECORDS C
          ON B.GAME_JOIN_PLAYER_SEQ = C.GAME_JOIN_PLAYER_SEQ
        LEFT JOIN USER D
          ON B.USER_SEQ = D.USER_SEQ
       WHERE A.GAME_SEQ = #{gameSeq}
         <if test="teamSeq != null and !''.equals(teamSeq)">
         AND A.TEAM_SEQ = #{teamSeq}
         </if>
         <if test="quarterCode != null and !''.equals(quarterCode)">
         AND C.QUARTER_CODE = #{quarterCode}
         </if>
    </select>

    <select id="findAllTeamsQuarterRecords" resultType="com.threeNerds.basketballDiary.mvc.game.dto.getGameQuarterRecords.response.TeamQuarterRecordsDTO">
        /* GameRecordManagerRepository.findAllTeamsQuarterRecords */
        SELECT GJT.GAME_JOIN_TEAM_SEQ
             , GJT.TEAM_NAME
             , GJT.HOME_AWAY_CODE
             , QTR.QUARTER_TIME   /* TODO 삭제 검토... */
             , QTR.SCORE
             , QTR.FOUL
          FROM GAME_JOIN_TEAM GJT
         INNER JOIN QUARTER_TEAM_RECORDS QTR
            ON GJT.GAME_JOIN_TEAM_SEQ = QTR.GAME_JOIN_TEAM_SEQ
         WHERE 1=1
           AND GJT.GAME_SEQ = #{gameSeq}
           AND QTR.QUARTER_CODE = #{quarterCode}
    </select>


    <select id="findAllQuarterRecords" resultType="com.threeNerds.basketballDiary.mvc.game.dto.getGameAllQuartersRecords.QuarterTeamRecordsDTO">
        /* GameRecordManagerRepository.findAllQuarterRecords */
        SELECT GJT.GAME_SEQ
             , GJT.GAME_JOIN_TEAM_SEQ
             , GJT.TEAM_NAME
             , GJT.HOME_AWAY_CODE
             , QTR.QUARTER_CODE
             , QTR.QUARTER_TIME
             , QTR.SCORE
             , QTR.FOUL
          FROM GAME_JOIN_TEAM GJT
         INNER JOIN QUARTER_TEAM_RECORDS QTR
            ON GJT.GAME_JOIN_TEAM_SEQ = QTR.GAME_JOIN_TEAM_SEQ
         WHERE 1=1
           AND GJT.GAME_SEQ = #{gameSeq}
    </select>

    <select id="findTeamMembersByGameSeq" resultType="com.threeNerds.basketballDiary.mvc.game.dto.PlayerInfoDTO">
        SELECT A.GAME_SEQ
             , A.TEAM_SEQ
             , A.HOME_AWAY_CODE -- HOME/AWAY 구분을 위한 키, 화면에서 처리하여 구분지어 보여주기
             , (SELECT TEAM_NAME FROM TEAM WHERE TEAM_SEQ = A.TEAM_SEQ) TEAM_NAME
             , B.NAME
             , B.EMAIL
             , B.BACK_NUMBER
        FROM GAME_JOIN_TEAM A
                 INNER JOIN GAME_JOIN_PLAYER B
                            ON A.GAME_JOIN_TEAM_SEQ = B.GAME_JOIN_TEAM_SEQ
        WHERE GAME_SEQ = #{gameSeq}
          AND NOT EXISTS (
                SELECT 1
                FROM GAME_RECORD_AUTH TMP1
                         INNER JOIN TEAM_MEMBER TMP2
                                    ON TMP1.TEAM_MEMBER_SEQ = TMP2.TEAM_MEMBER_SEQ
                WHERE TMP1.GAME_SEQ = A.GAME_SEQ
                  AND TMP2.USER_SEQ = B.USER_SEQ
                  AND TMP1.GAME_RECORD_AUTH_CODE = '02' -- 입력권한자
            ) -- 권한을 이미 부여받은 선수는 제외

    </select>

</mapper>
